<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>交易日期修复测试</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>交易日期修复测试</h2>
        
        <div class="alert alert-success">
            <h5>✅ 已修复的问题：</h5>
            <ul>
                <li>修复了 <code>app.logger</code> 未定义的错误</li>
                <li>简化了日期处理逻辑，避免复杂的日志记录</li>
                <li>确保前端正确收集交易日期数据</li>
            </ul>
        </div>
        
        <div class="card">
            <div class="card-body">
                <h5>测试步骤</h5>
                <ol>
                    <li><strong>重启服务器</strong> - 确保修复生效</li>
                    <li><strong>打开交易记录页面</strong></li>
                    <li><strong>编辑一条交易记录</strong></li>
                    <li><strong>修改交易日期</strong></li>
                    <li><strong>保存记录</strong> - 应该不再出现500错误</li>
                    <li><strong>重新打开记录</strong> - 检查日期是否已更新</li>
                </ol>
                
                <div class="alert alert-info mt-3">
                    <h6>如果仍然有问题：</h6>
                    <ul class="mb-0">
                        <li>检查浏览器控制台的错误信息</li>
                        <li>查看服务器终端的错误日志</li>
                        <li>确认数据库连接正常</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div class="mt-4">
            <button class="btn btn-primary" onclick="testDateFormat()">测试日期格式</button>
            <button class="btn btn-secondary" onclick="showDebugInfo()">显示调试信息</button>
        </div>
        
        <div id="test-results" class="mt-3"></div>
    </div>

    <script>
        function testDateFormat() {
            const results = document.getElementById('test-results');
            
            const testDates = [
                '2025-01-20T14:30',
                '2025-01-20T14:30:00',
                '2025-01-20T14:30:00.000Z'
            ];
            
            let html = '<div class="card"><div class="card-body"><h6>日期格式测试结果：</h6>';
            
            testDates.forEach(dateStr => {
                try {
                    const date = new Date(dateStr);
                    const isValid = !isNaN(date.getTime());
                    html += `<div class="mb-1">
                        <span class="badge ${isValid ? 'bg-success' : 'bg-danger'}">${isValid ? '✓' : '✗'}</span>
                        ${dateStr} → ${isValid ? date.toISOString() : '无效'}
                    </div>`;
                } catch (e) {
                    html += `<div class="mb-1">
                        <span class="badge bg-danger">✗</span>
                        ${dateStr} → 错误: ${e.message}
                    </div>`;
                }
            });
            
            html += '</div></div>';
            results.innerHTML = html;
        }
        
        function showDebugInfo() {
            const results = document.getElementById('test-results');
            
            results.innerHTML = `
                <div class="card">
                    <div class="card-body">
                        <h6>调试信息：</h6>
                        <p><strong>当前时间：</strong> ${new Date().toISOString()}</p>
                        <p><strong>本地时间格式：</strong> ${new Date().toISOString().slice(0, 16)}</p>
                        <p><strong>时区偏移：</strong> ${new Date().getTimezoneOffset()} 分钟</p>
                        
                        <h6 class="mt-3">修复内容：</h6>
                        <ul>
                            <li>前端：确保交易日期字段被正确收集</li>
                            <li>后端：修复 app.logger 错误，改为 current_app.logger</li>
                            <li>后端：简化日期处理逻辑，支持 datetime-local 格式</li>
                            <li>服务层：确保交易日期字段不被过滤</li>
                        </ul>
                    </div>
                </div>
            `;
        }
    </script>
</body>
</html>