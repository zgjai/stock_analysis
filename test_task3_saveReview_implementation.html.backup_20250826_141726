<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task 3 - saveReview Function Implementation Test</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Task 3 - saveReview Function Implementation Test</h1>
        
        <div class="card mt-4">
            <div class="card-header">
                <h5>测试场景</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <button class="btn btn-primary w-100 mb-2" onclick="testSaveReviewWithoutManager()">
                            测试：无保存管理器
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary w-100 mb-2" onclick="testSaveReviewWithoutApiClient()">
                            测试：无API客户端
                        </button>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-success w-100 mb-2" onclick="testSaveReviewWithMocks()">
                            测试：模拟正常保存
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <button class="btn btn-warning w-100 mb-2" onclick="testSaveReviewWithError()">
                            测试：保存过程异常
                        </button>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-info w-100 mb-2" onclick="clearMessages()">
                            清除消息
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5>测试结果</h5>
            </div>
            <div class="card-body">
                <div id="test-results"></div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // 全局变量模拟
        let apiClient = null;
        let reviewSaveManager = null;

        // 从review.html复制的showErrorMessage函数
        function showErrorMessage(message) {
            console.error('错误:', message);
            
            // 创建错误提示
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger alert-dismissible fade show position-fixed';
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                <i class="fas fa-exclamation-triangle me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            // 5秒后自动移除
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 5000);
        }

        function showSuccessMessage(message) {
            console.log('成功:', message);
            
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed';
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                <i class="fas fa-check-circle me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 3000);
        }

        // 从review.html复制的saveReview函数
        function saveReview() {
            console.log('🔧 执行复盘保存');
            
            // 检查保存管理器是否已初始化
            if (!reviewSaveManager) {
                console.error('❌ 保存管理器未初始化');
                showErrorMessage('保存功能未正确初始化，请刷新页面重试');
                return;
            }
            
            // 检查API客户端是否已初始化
            if (!apiClient) {
                console.error('❌ API客户端未初始化');
                showErrorMessage('网络连接未正确初始化，请刷新页面重试');
                return;
            }
            
            // 调用保存管理器的保存方法
            try {
                reviewSaveManager.saveReview();
            } catch (error) {
                console.error('❌ 调用保存管理器失败:', error);
                showErrorMessage('保存过程中发生错误: ' + error.message);
            }
        }

        // 测试函数
        function testSaveReviewWithoutManager() {
            logTest('测试：无保存管理器');
            apiClient = { test: true };
            reviewSaveManager = null;
            saveReview();
        }

        function testSaveReviewWithoutApiClient() {
            logTest('测试：无API客户端');
            apiClient = null;
            reviewSaveManager = { test: true };
            saveReview();
        }

        function testSaveReviewWithMocks() {
            logTest('测试：模拟正常保存');
            apiClient = { test: true };
            reviewSaveManager = {
                saveReview: function() {
                    console.log('✅ 模拟保存成功');
                    showSuccessMessage('复盘保存成功！');
                }
            };
            saveReview();
        }

        function testSaveReviewWithError() {
            logTest('测试：保存过程异常');
            apiClient = { test: true };
            reviewSaveManager = {
                saveReview: function() {
                    throw new Error('模拟保存异常');
                }
            };
            saveReview();
        }

        function clearMessages() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                if (alert.parentNode) {
                    alert.parentNode.removeChild(alert);
                }
            });
            logTest('已清除所有消息');
        }

        function logTest(message) {
            const resultsDiv = document.getElementById('test-results');
            const timestamp = new Date().toLocaleTimeString();
            resultsDiv.innerHTML += `<div class="mb-1"><small class="text-muted">[${timestamp}]</small> ${message}</div>`;
            resultsDiv.scrollTop = resultsDiv.scrollHeight;
        }

        // 页面加载完成后的初始化
        document.addEventListener('DOMContentLoaded', function() {
            logTest('页面加载完成，开始测试 saveReview 函数实现');
            logTest('✅ Task 3 - saveReview函数实现已完成');
            logTest('✅ 已移除占位符实现');
            logTest('✅ 已添加状态检查');
            logTest('✅ 已实现错误处理和用户反馈');
        });
    </script>
</body>
</html>