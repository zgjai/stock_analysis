<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UXUtils.highlightElement 修复测试</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/main.css">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">UXUtils.highlightElement 修复测试</h5>
                    </div>
                    <div class="card-body">
                        <form id="testForm">
                            <div class="mb-3">
                                <label for="testInput1" class="form-label">测试输入框 1</label>
                                <input type="text" class="form-control" id="testInput1" name="testInput1">
                            </div>
                            
                            <div class="mb-3">
                                <label for="testInput2" class="form-label">测试输入框 2</label>
                                <input type="text" class="form-control" id="testInput2" name="testInput2">
                            </div>
                            
                            <div class="mb-3">
                                <label for="testSelect" class="form-label">测试选择框</label>
                                <select class="form-select" id="testSelect" name="testSelect">
                                    <option value="">请选择</option>
                                    <option value="1">选项 1</option>
                                    <option value="2">选项 2</option>
                                </select>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="button" class="btn btn-primary" onclick="testHighlight()">测试高亮效果</button>
                                <button type="submit" class="btn btn-success">测试表单验证</button>
                            </div>
                        </form>
                        
                        <div class="mt-4">
                            <h6>测试结果:</h6>
                            <div id="testResults" class="alert alert-info">
                                等待测试...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/static/js/utils.js"></script>
    <script src="/static/js/form-validation.js"></script>
    <script>
        function logResult(message, type = 'info') {
            const resultsDiv = document.getElementById('testResults');
            const timestamp = new Date().toLocaleTimeString();
            resultsDiv.innerHTML += `<div class="text-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info'}">[${timestamp}] ${message}</div>`;
        }

        function testHighlight() {
            logResult('开始测试 UXUtils.highlightElement...', 'info');
            
            // 检查 UXUtils 是否存在
            if (typeof UXUtils === 'undefined') {
                logResult('❌ UXUtils 未定义', 'error');
                return;
            }
            
            // 检查 highlightElement 方法是否存在
            if (typeof UXUtils.highlightElement !== 'function') {
                logResult('❌ UXUtils.highlightElement 方法不存在', 'error');
                return;
            }
            
            logResult('✅ UXUtils.highlightElement 方法存在', 'success');
            
            // 测试高亮效果
            const testInput1 = document.getElementById('testInput1');
            const testInput2 = document.getElementById('testInput2');
            const testSelect = document.getElementById('testSelect');
            
            try {
                logResult('测试输入框 1 高亮...', 'info');
                UXUtils.highlightElement(testInput1, 2000);
                
                setTimeout(() => {
                    logResult('测试输入框 2 高亮...', 'info');
                    UXUtils.highlightElement(testInput2, 1500);
                }, 500);
                
                setTimeout(() => {
                    logResult('测试选择框高亮...', 'info');
                    UXUtils.highlightElement(testSelect, 1000);
                }, 1000);
                
                setTimeout(() => {
                    logResult('✅ 所有高亮测试完成', 'success');
                }, 3500);
                
            } catch (error) {
                logResult(`❌ 高亮测试失败: ${error.message}`, 'error');
            }
        }

        // 初始化表单验证器
        document.addEventListener('DOMContentLoaded', function() {
            logResult('页面加载完成，初始化表单验证器...', 'info');
            
            try {
                const validator = new FormValidator('testForm', {
                    rules: {
                        testInput1: {
                            required: true,
                            minLength: 3
                        },
                        testInput2: {
                            required: true,
                            email: true
                        },
                        testSelect: {
                            required: true
                        }
                    },
                    messages: {
                        testInput1: {
                            required: '请输入测试内容',
                            minLength: '至少输入3个字符'
                        },
                        testInput2: {
                            required: '请输入邮箱地址',
                            email: '请输入有效的邮箱地址'
                        },
                        testSelect: {
                            required: '请选择一个选项'
                        }
                    },
                    highlightErrors: true
                });
                
                logResult('✅ 表单验证器初始化成功', 'success');
                
            } catch (error) {
                logResult(`❌ 表单验证器初始化失败: ${error.message}`, 'error');
            }
        });
    </script>
</body>
</html>