<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>复盘记录显示测试</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="container mt-4">
        <h2>复盘记录显示测试</h2>
        
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">复盘记录</h5>
                <button class="btn btn-primary btn-sm" onclick="testLoadReviews()">
                    <i class="fas fa-sync"></i> 加载复盘记录
                </button>
            </div>
            <div class="card-body">
                <div id="reviews-list" style="min-height: 300px;">
                    <!-- 复盘记录将显示在这里 -->
                </div>
            </div>
        </div>
        
        <div class="mt-4">
            <h5>调试信息</h5>
            <div id="debug-info" class="bg-light p-3 rounded">
                <small class="text-muted">调试信息将显示在这里...</small>
            </div>
        </div>
    </div>

    <script>
        // 复制修复后的loadReviews函数
        async function loadReviews() {
            console.log('[DEBUG] 开始加载复盘记录...');
            
            const debugInfo = document.getElementById('debug-info');
            debugInfo.innerHTML = '<small class="text-info">正在加载复盘记录...</small>';
            
            try {
                // 显示加载状态
                const reviewsList = document.getElementById('reviews-list');
                if (reviewsList) {
                    reviewsList.innerHTML = `
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">加载中...</span>
                            </div>
                            <p class="mt-2 text-muted">正在加载复盘记录...</p>
                        </div>
                    `;
                }
                
                const response = await fetch('/api/reviews');
                console.log('[DEBUG] API响应状态:', response.status);
                debugInfo.innerHTML += '<br><small class="text-info">API响应状态: ' + response.status + '</small>';
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                const data = await response.json();
                console.log('[DEBUG] 复盘记录原始数据:', data);
                debugInfo.innerHTML += '<br><small class="text-info">API返回数据结构: ' + JSON.stringify(data, null, 2) + '</small>';
                
                if (data.success && data.data && data.data.reviews) {
                    const reviews = data.data.reviews;
                    console.log('[DEBUG] 找到复盘记录:', reviews.length, '条');
                    debugInfo.innerHTML += '<br><small class="text-success">找到 ' + reviews.length + ' 条复盘记录</small>';
                    
                    if (reviews.length > 0) {
                        displayReviews(reviews);
                        console.log(`[DEBUG] 成功显示 ${reviews.length} 条复盘记录`);
                        debugInfo.innerHTML += '<br><small class="text-success">成功显示复盘记录</small>';
                    } else {
                        if (reviewsList) {
                            reviewsList.innerHTML = `
                                <div class="text-center text-muted py-5">
                                    <i class="fas fa-clipboard-list fa-3x mb-3 opacity-50"></i>
                                    <h5>暂无复盘记录</h5>
                                    <p class="mb-3">开始您的第一次复盘分析</p>
                                </div>
                            `;
                        }
                        console.log('[DEBUG] 复盘记录数组为空');
                        debugInfo.innerHTML += '<br><small class="text-warning">复盘记录数组为空</small>';
                    }
                } else {
                    throw new Error(data.message || '获取复盘记录失败');
                }
            } catch (error) {
                console.error('[ERROR] 加载复盘记录失败:', error);
                debugInfo.innerHTML += '<br><small class="text-danger">错误: ' + error.message + '</small>';
                
                const reviewsList = document.getElementById('reviews-list');
                if (reviewsList) {
                    reviewsList.innerHTML = `
                        <div class="text-center text-danger py-4">
                            <i class="fas fa-exclamation-triangle fa-2x mb-3"></i>
                            <h6>加载复盘记录失败</h6>
                            <p class="mb-3">${error.message}</p>
                            <button class="btn btn-outline-primary btn-sm" onclick="loadReviews()">
                                <i class="fas fa-redo"></i> 重试
                            </button>
                        </div>
                    `;
                }
            }
        }
        
        function displayReviews(reviews) {
            console.log('[DEBUG] displayReviews 接收到的数据:', reviews);
            
            const container = document.getElementById('reviews-list');
            if (!container) {
                console.error('[ERROR] 找不到reviews-list容器');
                return;
            }
            
            if (!reviews || reviews.length === 0) {
                container.innerHTML = `
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-clipboard-list fa-2x mb-3 opacity-50"></i>
                        <p>暂无复盘记录</p>
                        <small class="text-muted">开始您的第一次复盘分析</small>
                    </div>
                `;
                return;
            }
            
            // 生成复盘记录HTML
            const reviewsHtml = reviews.map(review => {
                const profitDisplay = review.floating_profit_display || {};
                const profitColor = profitDisplay.color || 'text-muted';
                const profitText = profitDisplay.display || '无数据';
                
                return `
                    <div class="card mb-3 review-item" data-review-id="${review.id}">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-md-3">
                                    <h6 class="card-title mb-1">
                                        <strong>${review.stock_code}</strong>
                                    </h6>
                                    <small class="text-muted">${review.review_date}</small>
                                </div>
                                <div class="col-md-2">
                                    <span class="badge bg-primary">${review.decision || '未设置'}</span>
                                </div>
                                <div class="col-md-2">
                                    <small class="text-muted">持仓天数</small><br>
                                    <strong>${review.holding_days || 0}天</strong>
                                </div>
                                <div class="col-md-2">
                                    <small class="text-muted">浮盈</small><br>
                                    <strong class="${profitColor}">${profitText}</strong>
                                </div>
                                <div class="col-md-2">
                                    <small class="text-muted">总分</small><br>
                                    <strong>${review.total_score || 0}/25</strong>
                                </div>
                                <div class="col-md-1">
                                    <button class="btn btn-outline-primary btn-sm" title="查看详情">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                            ${review.analysis ? `
                                <div class="row mt-2">
                                    <div class="col-12">
                                        <small class="text-muted">分析:</small>
                                        <p class="mb-0 small">${review.analysis}</p>
                                    </div>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');
            
            container.innerHTML = reviewsHtml;
            console.log('[DEBUG] 复盘记录HTML已生成并插入到页面');
        }
        
        function testLoadReviews() {
            document.getElementById('debug-info').innerHTML = '<small class="text-muted">开始测试...</small>';
            loadReviews();
        }
        
        // 页面加载时自动执行
        document.addEventListener('DOMContentLoaded', function() {
            console.log('[DEBUG] 测试页面加载完成');
            setTimeout(() => {
                loadReviews();
            }, 500);
        });
    </script>
</body>
</html>