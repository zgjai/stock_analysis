<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>复盘页面错误修复测试</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="container mt-4">
        <h2>复盘页面错误修复测试</h2>
        
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>JavaScript声明测试</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-primary" onclick="testJavaScriptDeclarations()">
                            测试JavaScript声明
                        </button>
                        <div id="js-test-result" class="mt-3"></div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>复盘记录API测试</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-primary" onclick="testReviewsAPI()">
                            测试复盘记录API
                        </button>
                        <div id="api-test-result" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5>复盘记录显示测试</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-primary" onclick="testReviewsDisplay()">
                            测试复盘记录显示
                        </button>
                        <div id="reviews-list" class="mt-3 border p-3" style="min-height: 200px;">
                            <!-- 复盘记录将显示在这里 -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5>数据库查询测试</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-primary" onclick="testDatabaseQuery()">
                            查询000776复盘记录
                        </button>
                        <div id="db-test-result" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // 测试JavaScript声明
        function testJavaScriptDeclarations() {
            const resultDiv = document.getElementById('js-test-result');
            const results = [];
            
            // 测试Validators
            if (typeof window.Validators !== 'undefined') {
                results.push('✅ Validators 已正确声明');
            } else {
                results.push('❌ Validators 未声明');
            }
            
            // 测试ApiClient
            if (typeof window.ApiClient !== 'undefined') {
                results.push('✅ ApiClient 已正确声明');
            } else {
                results.push('❌ ApiClient 未声明');
            }
            
            // 测试apiClient实例
            if (typeof window.apiClient !== 'undefined') {
                results.push('✅ apiClient 实例已创建');
            } else {
                results.push('❌ apiClient 实例未创建');
            }
            
            resultDiv.innerHTML = `
                <div class="alert alert-info">
                    ${results.map(r => `<div>${r}</div>`).join('')}
                </div>
            `;
        }
        
        // 测试复盘记录API
        async function testReviewsAPI() {
            const resultDiv = document.getElementById('api-test-result');
            resultDiv.innerHTML = '<div class="alert alert-info">正在测试API...</div>';
            
            try {
                console.log('[TEST] 开始测试复盘记录API...');
                
                const response = await fetch('/api/reviews');
                console.log('[TEST] API响应状态:', response.status);
                console.log('[TEST] API响应头:', [...response.headers.entries()]);
                
                const data = await response.json();
                console.log('[TEST] API响应数据:', data);
                
                if (response.ok) {
                    resultDiv.innerHTML = `
                        <div class="alert alert-success">
                            <strong>✅ API测试成功</strong><br>
                            状态码: ${response.status}<br>
                            数据结构: ${JSON.stringify(data, null, 2)}
                        </div>
                    `;
                } else {
                    resultDiv.innerHTML = `
                        <div class="alert alert-danger">
                            <strong>❌ API测试失败</strong><br>
                            状态码: ${response.status}<br>
                            错误信息: ${data.message || '未知错误'}
                        </div>
                    `;
                }
            } catch (error) {
                console.error('[TEST] API测试错误:', error);
                resultDiv.innerHTML = `
                    <div class="alert alert-danger">
                        <strong>❌ API测试异常</strong><br>
                        错误信息: ${error.message}
                    </div>
                `;
            }
        }
        
        // 测试复盘记录显示
        async function testReviewsDisplay() {
            console.log('[TEST] 开始测试复盘记录显示...');
            
            // 模拟loadReviews函数的逻辑
            const reviewsList = document.getElementById('reviews-list');
            reviewsList.innerHTML = `
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                    </div>
                    <p class="mt-2 text-muted">正在加载复盘记录...</p>
                </div>
            `;
            
            try {
                const response = await fetch('/api/reviews');
                const data = await response.json();
                
                console.log('[TEST] 获取到的数据:', data);
                
                if (data.success) {
                    let reviews = null;
                    
                    // 处理不同的数据结构
                    if (data.data) {
                        if (Array.isArray(data.data)) {
                            reviews = data.data;
                        } else if (data.data.reviews && Array.isArray(data.data.reviews)) {
                            reviews = data.data.reviews;
                        } else if (typeof data.data === 'object') {
                            reviews = [data.data];
                        }
                    }
                    
                    console.log('[TEST] 处理后的复盘记录:', reviews);
                    
                    if (reviews && reviews.length > 0) {
                        // 显示复盘记录
                        reviewsList.innerHTML = reviews.map(review => `
                            <div class="card mb-2">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <h6 class="card-title">
                                                ${review.stock_code} - ${review.stock_name || '未知'}
                                            </h6>
                                            <p class="card-text">
                                                <small class="text-muted">
                                                    复盘日期: ${review.review_date || '未设置'}
                                                </small>
                                            </p>
                                            <p class="card-text">
                                                决策: <span class="badge bg-primary">${review.decision || '未设置'}</span>
                                            </p>
                                        </div>
                                        <div class="col-md-4 text-end">
                                            <small class="text-muted">
                                                ID: ${review.id || 'N/A'}
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `).join('');
                        
                        console.log(`[TEST] 成功显示 ${reviews.length} 条复盘记录`);
                    } else {
                        reviewsList.innerHTML = `
                            <div class="text-center text-muted py-5">
                                <i class="fas fa-clipboard-list fa-3x mb-3 opacity-50"></i>
                                <h5>暂无复盘记录</h5>
                                <p>数据库中没有找到复盘记录</p>
                            </div>
                        `;
                    }
                } else {
                    throw new Error(data.message || '获取复盘记录失败');
                }
            } catch (error) {
                console.error('[TEST] 显示测试错误:', error);
                reviewsList.innerHTML = `
                    <div class="text-center text-danger py-4">
                        <i class="fas fa-exclamation-triangle fa-2x mb-3"></i>
                        <h6>测试失败</h6>
                        <p>${error.message}</p>
                    </div>
                `;
            }
        }
        
        // 测试数据库查询
        async function testDatabaseQuery() {
            const resultDiv = document.getElementById('db-test-result');
            resultDiv.innerHTML = '<div class="alert alert-info">正在查询数据库...</div>';
            
            try {
                // 查询特定股票的复盘记录
                const response = await fetch('/api/reviews?stock_code=000776');
                const data = await response.json();
                
                console.log('[TEST] 000776复盘记录查询结果:', data);
                
                if (response.ok && data.success) {
                    const reviews = data.data?.reviews || data.data || [];
                    
                    if (reviews.length > 0) {
                        resultDiv.innerHTML = `
                            <div class="alert alert-success">
                                <strong>✅ 找到 ${reviews.length} 条000776的复盘记录</strong><br>
                                <pre>${JSON.stringify(reviews, null, 2)}</pre>
                            </div>
                        `;
                    } else {
                        resultDiv.innerHTML = `
                            <div class="alert alert-warning">
                                <strong>⚠️ 数据库中没有找到000776的复盘记录</strong><br>
                                请检查数据库中是否确实存在该记录
                            </div>
                        `;
                    }
                } else {
                    resultDiv.innerHTML = `
                        <div class="alert alert-danger">
                            <strong>❌ 查询失败</strong><br>
                            错误信息: ${data.message || '未知错误'}
                        </div>
                    `;
                }
            } catch (error) {
                console.error('[TEST] 数据库查询错误:', error);
                resultDiv.innerHTML = `
                    <div class="alert alert-danger">
                        <strong>❌ 查询异常</strong><br>
                        错误信息: ${error.message}
                    </div>
                `;
            }
        }
        
        // 页面加载时自动运行测试
        document.addEventListener('DOMContentLoaded', function() {
            console.log('[TEST] 页面加载完成，开始自动测试...');
            setTimeout(() => {
                testJavaScriptDeclarations();
                testReviewsAPI();
            }, 500);
        });
    </script>
</body>
</html>