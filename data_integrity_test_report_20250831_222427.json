{
  "timestamp": "2025-08-31T22:24:27.136085",
  "overall_result": {
    "success": false,
    "total_tests": 6,
    "passed_tests": 2,
    "failed_tests": 4,
    "success_rate": 33.33333333333333
  },
  "test_results": {
    "后端数据完整性测试": {
      "success": false,
      "message": "部分后端完整性测试失败",
      "details": "",
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.1, pytest-8.4.1, pluggy-1.6.0 -- /Users/zhangguijiang/project/stock/stock_analysis/venv/bin/python3\ncachedir: .pytest_cache\nrootdir: /Users/zhangguijiang/project/stock/stock_analysis\ncollecting ... collected 11 items\n\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_existing_analytics_functionality_unaffected FAILED [  9%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_readonly_data_access FAILED [ 18%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_service_layer_readonly_access FAILED [ 27%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_error_handling_system_stability FAILED [ 36%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_performance_with_different_data_volumes FAILED [ 45%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_memory_usage_stability FAILED [ 54%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_data_consistency_across_apis FAILED [ 63%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_tab_switching_compatibility FAILED [ 72%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_database_transaction_isolation FAILED [ 81%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_api_response_format_consistency FAILED [ 90%]\ntests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_error_recovery_capability FAILED [100%]\n\n=================================== FAILURES ===================================\n_ TestDataIntegrityCompatibility.test_existing_analytics_functionality_unaffected _\ntests/test_data_integrity_compatibility.py:71: in test_existing_analytics_functionality_unaffected\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n___________ TestDataIntegrityCompatibility.test_readonly_data_access ___________\ntests/test_data_integrity_compatibility.py:121: in test_readonly_data_access\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n______ TestDataIntegrityCompatibility.test_service_layer_readonly_access _______\nservices/expectation_comparison_service.py:264: in _get_trades_by_time_range\n    return query.all()\n           ^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/sqlalchemy/orm/query.py:2704: in all\n    return self._iter().all()  # type: ignore\n           ^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/sqlalchemy/orm/query.py:2857: in _iter\n    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(\nvenv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute\n    return self._execute_internal(\nvenv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2239: in _execute_internal\n    bind = self.get_bind(**bind_arguments)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/flask_sqlalchemy/session.py:53: in get_bind\n    engines = self._db.engines\n              ^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/flask_sqlalchemy/extension.py:690: in engines\n    raise RuntimeError(\nE   RuntimeError: The current Flask app is not registered with this 'SQLAlchemy' instance. Did you forget to call 'init_app', or did you create multiple 'SQLAlchemy' instances?\n\nDuring handling of the above exception, another exception occurred:\nservices/expectation_comparison_service.py:57: in get_expectation_comparison\n    trades = cls._get_trades_by_time_range(time_range)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nservices/expectation_comparison_service.py:266: in _get_trades_by_time_range\n    raise DatabaseError(f\"获取交易记录失败: {str(e)}\")\nE   error_handlers.DatabaseError: 获取交易记录失败: The current Flask app is not registered with this 'SQLAlchemy' instance. Did you forget to call 'init_app', or did you create multiple 'SQLAlchemy' instances?\n\nDuring handling of the above exception, another exception occurred:\ntests/test_data_integrity_compatibility.py:141: in test_service_layer_readonly_access\n    comparison_data = ExpectationComparisonService.get_expectation_comparison('all')\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nservices/expectation_comparison_service.py:78: in get_expectation_comparison\n    raise DatabaseError(f\"获取期望对比数据失败: {str(e)}\")\nE   error_handlers.DatabaseError: 获取期望对比数据失败: 获取交易记录失败: The current Flask app is not registered with this 'SQLAlchemy' instance. Did you forget to call 'init_app', or did you create multiple 'SQLAlchemy' instances?\n_____ TestDataIntegrityCompatibility.test_error_handling_system_stability ______\ntests/test_data_integrity_compatibility.py:180: in test_error_handling_system_stability\n    with patch('models.trade_record.TradeRecord.query') as mock_query:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1457: in get_original\n    original = getattr(target, name, DEFAULT)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/flask_sqlalchemy/model.py:23: in __get__\n    cls, session=cls.__fsa__.session()  # type: ignore[arg-type]\n                 ^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/sqlalchemy/orm/scoping.py:220: in __call__\n    sess = self.registry()\n           ^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/sqlalchemy/util/_collections.py:634: in __call__\n    key = self.scopefunc()\n          ^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/flask_sqlalchemy/session.py:111: in _app_ctx_id\n    return id(app_ctx._get_current_object())  # type: ignore[attr-defined]\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.13/site-packages/werkzeug/local.py:519: in _get_current_object\n    raise RuntimeError(unbound_message) from None\nE   RuntimeError: Working outside of application context.\nE   \nE   This typically means that you attempted to use functionality that needed\nE   the current application. To solve this, set up an application context\nE   with app.app_context(). See the documentation for more information.\n_ TestDataIntegrityCompatibility.test_performance_with_different_data_volumes __\ntests/test_data_integrity_compatibility.py:205: in test_performance_with_different_data_volumes\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n__________ TestDataIntegrityCompatibility.test_memory_usage_stability __________\ntests/test_data_integrity_compatibility.py:252: in test_memory_usage_stability\n    import psutil\nE   ModuleNotFoundError: No module named 'psutil'\n_______ TestDataIntegrityCompatibility.test_data_consistency_across_apis _______\ntests/test_data_integrity_compatibility.py:279: in test_data_consistency_across_apis\n    overview_data = json.loads(overview_response.data)['data']\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   KeyError: 'data'\n_______ TestDataIntegrityCompatibility.test_tab_switching_compatibility ________\ntests/test_data_integrity_compatibility.py:302: in test_tab_switching_compatibility\n    assert overview_response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n______ TestDataIntegrityCompatibility.test_database_transaction_isolation ______\ntests/test_data_integrity_compatibility.py:368: in test_database_transaction_isolation\n    assert all(status == 200 for status in results), f\"并发访问状态码异常: {results}\"\nE   AssertionError: 并发访问状态码异常: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500]\nE   assert False\nE    +  where False = all(<generator object TestDataIntegrityCompatibility.test_database_transaction_isolation.<locals>.<genexpr> at 0x1115c3d30>)\n_____ TestDataIntegrityCompatibility.test_api_response_format_consistency ______\ntests/test_data_integrity_compatibility.py:386: in test_api_response_format_consistency\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n________ TestDataIntegrityCompatibility.test_error_recovery_capability _________\ntests/test_data_integrity_compatibility.py:402: in test_error_recovery_capability\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code\n=========================== short test summary info ============================\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_existing_analytics_functionality_unaffected\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_readonly_data_access\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_service_layer_readonly_access\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_error_handling_system_stability\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_performance_with_different_data_volumes\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_memory_usage_stability\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_data_consistency_across_apis\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_tab_switching_compatibility\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_database_transaction_isolation\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_api_response_format_consistency\nFAILED tests/test_data_integrity_compatibility.py::TestDataIntegrityCompatibility::test_error_recovery_capability\n============================== 11 failed in 0.95s ==============================\n"
    },
    "前端兼容性测试": {
      "success": true,
      "message": "前端兼容性测试文件验证通过",
      "details": "测试文件位置: /Users/zhangguijiang/project/stock/stock_analysis/test_frontend_compatibility.html"
    },
    "错误处理稳定性测试": {
      "success": false,
      "message": "错误处理测试失败",
      "details": "错误处理测试: 2/3 通过\n"
    },
    "性能基准测试": {
      "success": false,
      "message": "性能基准测试失败",
      "details": "Traceback (most recent call last):\n  File \"/Users/zhangguijiang/project/stock/stock_analysis/test_performance_benchmark.py\", line 15, in <module>\n    import psutil\nModuleNotFoundError: No module named 'psutil'\n"
    },
    "API兼容性测试": {
      "success": true,
      "message": "API兼容性验证通过",
      "details": "验证了 4 个API端点"
    },
    "数据库事务测试": {
      "success": false,
      "message": "数据库事务测试失败",
      "details": ""
    }
  },
  "execution_time": 3.0367319583892822,
  "requirements_tested": [
    "8.1",
    "8.2",
    "8.3",
    "8.4",
    "8.5"
  ]
}